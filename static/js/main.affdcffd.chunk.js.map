{"version":3,"sources":["LoadFiles.js","Phrase.js","Phrases.js","Item.js","Infos.js","App.js","index.js"],"names":["LoadFiles","props","className","type","name","id","onChange","change","onClick","click","Phrase","active","phraseOfficial","Phrases","phrases","messages","map","phrase","key","htmlFor","placeholder","value","Item","info","Infos","items","kbvData","item","fileLoaded","length","App","state","lines","exceptions","kbvFile","newPhrase","counter","handleClick","e","setState","reader","FileReader","onload","result","replace","split","line","i","j","toLowerCase","includes","index","findIndex","message","filter","readAsText","document","getElementById","files","handleChangeFile","forEach","handleChangeNewPhrase","target","handleAddPhrase","preventDefault","alert","this","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.affdcffd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LoadFiles = props => {\r\n  return (\r\n    <div className=\"loadFiles\">\r\n      <h3 className=\"title\">Load file .csv / .txt</h3>\r\n      <input type=\"file\" name=\"kbvFile\" id=\"kbvFile\" onChange={props.change} />\r\n      <button className=\"submit\" onClick={props.click}>\r\n        Send file\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadFiles;\r\n","import React from 'react';\r\n\r\nconst Phrase = props => {\r\n  return (\r\n    <p className={props.active ? \"active\" : null}>{props.phraseOfficial}</p>\r\n  );\r\n};\r\n\r\nexport default Phrase;\r\n","import React from 'react';\r\nimport './Phrases.css';\r\nimport Phrase from './Phrase.js';\r\n\r\n\r\nconst Phrases = props => {\r\n  const phrases = props.messages.map(phrase => (\r\n    <Phrase\r\n      phraseOfficial={phrase.phraseOfficial}\r\n      key={phrase.id}\r\n      active={phrase.active}\r\n    />\r\n  ));\r\n  return (\r\n    <section>\r\n      <h2>PHRASES TO FIND</h2>\r\n      <div className=\"phrases\">{phrases}</div>\r\n      <form className=\"newPhrase\">\r\n        <label htmlFor=\"addPhrase\">\r\n          Add new phrase\r\n          <input\r\n            type=\"text\"\r\n            id=\"addPhrase\"\r\n            placeholder=\"Write text\"\r\n            onChange={props.change}\r\n            value={props.value}\r\n          ></input>\r\n        </label>\r\n        <button onClick={props.click}>Add</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Phrases;\r\n","import React from 'react';\r\n\r\nconst Item = props => {\r\n  return (\r\n    <div className=\"info\">\r\n      <h3>{props.phraseOfficial}</h3>\r\n      <p>{props.info}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst Infos = props => {\r\n  const items = props.kbvData.map(item => (\r\n    <Item key={item.id} phraseOfficial={item.phraseOfficial} info={item.info} />\r\n  ));\r\n  return (\r\n    <div className=\"infosUpper\">\r\n      <h2>Results and hints</h2>\r\n      {props.fileLoaded === \"start\" ? (\r\n        <p>Results will be displayed after sending file </p>\r\n      ) : null}\r\n      {props.fileLoaded === \"noFileLoaded\" ? <p>No file loaded</p> : null}\r\n      {props.fileLoaded === \"loaded\" && !props.kbvData.length ? (\r\n        <p>None of the search phrases found in the uploaded file</p>\r\n      ) : null}\r\n      <div className=\"infos\">{items}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Infos;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport LoadFiles from './LoadFiles.js';\r\nimport Phrases from './Phrases';\r\nimport Infos from './Infos';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    lines: [],\r\n    messages: [\r\n      {\r\n        id: 0,\r\n        phrase: \"Chocolate milk\",\r\n        phraseOfficial: \"Chocolate milk\",\r\n        info:\r\n          \"Chocolate milk was invented in Jamaica\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 1,\r\n        phrase: \"Hawaiian Pizza\",\r\n        phraseOfficial: \"Hawaiian Pizza\",\r\n        info:\r\n          \"Hawaiian Pizza was invented by a boy from Canada.\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 2,\r\n        phrase: \"Cheese\",\r\n        phraseOfficial: \"Cheese\",\r\n        info:\r\n          \"Cheese is the most frequently stolen food from shops.\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 3,\r\n        phrase: \"Chicken\",\r\n        phraseOfficial: \"Chicken\",\r\n        info:\r\n          'There are 19 billion chickens on Earth, while \"only\" 7,5 billion people.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 4,\r\n        phrase: \"Microwave meal\",\r\n        phraseOfficial: \"Microwave meal\",\r\n        info:\r\n          \"The technologies currently used in microwave ovens were used to track German aircraft during World War II.\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 5,\r\n        phrase: \"Beer\",\r\n        phraseOfficial: \"Beer\",\r\n        info:\r\n          \"Builders of the Egyptian pyramids were paid with bread and beer.\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 6,\r\n        phrase: \"Lobster\",\r\n        phraseOfficial: \"Lobster\",\r\n        info:\r\n          'At the beginning of the XX century, lobsters were considered a delicacy for the poor, and were given to, e.g. prisoners. Everything changed thanks to railways - during long transcontinental journeys, lobster passengers were served as a sophisticated and exquisite dish.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 7,\r\n        phrase: \"Fresh milk\",\r\n        phraseOfficial: \"Fresh milk\",\r\n        info:\r\n          'Before the invention of refrigerators, people would put live frogs into their milk to protect them from deterioration.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 8,\r\n        phrase: \"Honey\",\r\n        phraseOfficial: \"Honey\",\r\n        info:\r\n          \"Honey is the only food in the world that doesn't go bad\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 9,\r\n        phrase: \"Bread\",\r\n        phraseOfficial: \"Bread\",\r\n        info:\r\n          'Cosmonauts eat pancakes instead of bread, because crumbs can cause many problems inside the space station.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 10,\r\n        phrase: \"Cookies\",\r\n        phraseOfficial: \"Cookies\",\r\n        info:\r\n          'Ruth Wakefield - the inventor of chocolate chip cookies - sold her idea to Nestle in exchange for a lifetime supply of chocolate',\r\n        active: false\r\n      },\r\n      {\r\n        id: 11,\r\n        phrase: \"Ketchup\",\r\n        phraseOfficial: \"Ketchup\",\r\n        info:\r\n          \"In 96% of American homes, you'll always find ketchup. Salt and pepper not necessarily.\",\r\n        active: false\r\n      },\r\n      {\r\n        id: 12,\r\n        phrase: \"White chocolate\",\r\n        phraseOfficial: \"White chocolate\",\r\n        info:\r\n          'Technically, white chocolate is not chocolate at all.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 13,\r\n        phrase: \"Chips\",\r\n        phraseOfficial: \"Chips\",\r\n        info:\r\n          'The inventor Pringles was cremated after his death, and his ashes were placed in a tube after these chips.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 14,\r\n        phrase: \"Cheddar\",\r\n        phraseOfficial: \"Cheddar\",\r\n        info:\r\n          'Cheddar is always orange because it is intentionally colored.',\r\n        active: false\r\n      },\r\n      {\r\n        id: 15,\r\n        phrase: \"Carrot\",\r\n        phraseOfficial: \"Carrot\",\r\n        info:\r\n          'Carrots-miniatures are simply ungrown specimens. They were \"invented\" when farmers got bored throwing them out as defective.',\r\n        active: false\r\n      }\r\n    ],\r\n    exceptions: [\r\n      {\r\n        phrase: \"No Chocolate milk\",\r\n        phraseOfficial: \"Chocolate milk\",\r\n      },\r\n      {\r\n        phrase: \"No Hawaiian Pizza\",\r\n        phraseOfficial: \"Hawaiian Pizza\",\r\n      },\r\n      {\r\n        phrase: \"No Cheese\",\r\n        phraseOfficial: \"Cheese\",\r\n      },\r\n      {\r\n        phrase: \"No Chicken\",\r\n        phraseOfficial: \"Chicken\",\r\n      },\r\n      {\r\n        phrase: \"No Microwave meal\",\r\n        phraseOfficial: \"Microwave meal\",\r\n      },\r\n      {\r\n        phrase: \"No Beer\",\r\n        phraseOfficial: \"Beer\",\r\n      },\r\n      {\r\n        phrase: \"No Lobster\",\r\n        phraseOfficial: \"Lobster\",\r\n      },\r\n      {\r\n        phrase: \"No Fresh milk\",\r\n        phraseOfficial: \"Fresh milk\",\r\n      },\r\n      {\r\n        phrase: \"No Honey\",\r\n        phraseOfficial: \"Honey\",\r\n      },\r\n      {\r\n        phrase: \"No Bread\",\r\n        phraseOfficial: \"Bread\",\r\n      },\r\n      {\r\n        phrase: \"No Cookies\",\r\n        phraseOfficial: \"Cookies\",\r\n      },\r\n      {\r\n        phrase: \"No Ketchup\",\r\n        phraseOfficial: \"Ketchup\",\r\n      },\r\n      {\r\n        phrase: \"No White chocolate\",\r\n        phraseOfficial: \"White chocolate\",\r\n      },\r\n      {\r\n        phrase: \"No Chips\",\r\n        phraseOfficial: \"Chips\",\r\n      },\r\n      {\r\n        phrase: \"No Cheddar\",\r\n        phraseOfficial: \"Cheddar\",\r\n      },\r\n      {\r\n        phrase: \"No Carrot\",\r\n        phraseOfficial: \"Carrot\",\r\n      }\r\n    ],\r\n    kbvData: [],\r\n    fileLoaded: \"start\",\r\n    kbvFile: false,\r\n    newPhrase: \"\",\r\n    counter: 100\r\n  };\r\n\r\n  handleClick = e => {\r\n    if (!this.state.kbvFile) {\r\n      this.setState({\r\n        fileLoaded: \"noFileLoaded\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      fileLoaded: \"loaded\"\r\n    });\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      let lines = reader.result\r\n        .replace(/[\\r\\n\\u0085\\u2028\\u2029]+/g, \" \")\r\n        .replace(/�/g, \"*\")\r\n        .split()\r\n        .map(function (line) {\r\n          return line.split(\",\");\r\n        });\r\n\r\n      this.setState({ lines });\r\n\r\n      for (let i = 0; i < lines[0].length; i++) {\r\n        for (let j = 0; j < this.state.messages.length; j++) {\r\n          if (\r\n            lines[0][i]\r\n              .toLowerCase()\r\n              .includes(this.state.messages[j].phrase.toLowerCase())\r\n          ) {\r\n            let messages = this.state.messages;\r\n            messages[j].active = true;\r\n            this.setState({\r\n              messages,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < lines[0].length; i++) {\r\n        for (let j = 0; j < this.state.exceptions.length; j++) {\r\n          if (\r\n            lines[0][i]\r\n              .toLowerCase()\r\n              .includes(this.state.exceptions[j].phrase.toLowerCase())\r\n          ) {\r\n            const index = this.state.messages.findIndex(\r\n              message =>\r\n                message.phraseOfficial ===\r\n                this.state.exceptions[j].phraseOfficial\r\n            );\r\n            let messages = this.state.messages;\r\n            messages[index].active = false;\r\n            this.setState({\r\n              messages,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      const kbvData = this.state.messages.filter(message => message.active);\r\n      this.setState({ kbvData });\r\n    };\r\n    reader.readAsText(document.getElementById(\"kbvFile\").files[0]);\r\n  };\r\n\r\n  handleChangeFile = e => {\r\n    let messages = [...this.state.messages];\r\n    messages.forEach(message => {\r\n      message.active = false;\r\n    });\r\n    this.setState({\r\n      messages,\r\n      kbvData: [],\r\n      fileLoaded: \"start\",\r\n      kbvFile: true\r\n    });\r\n  };\r\n\r\n  handleChangeNewPhrase = e => {\r\n    this.setState({\r\n      newPhrase: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddPhrase = e => {\r\n    e.preventDefault();\r\n    if (!this.state.newPhrase) return alert(\"No phrase given\");\r\n    const newPhrase = {\r\n      id: this.state.counter,\r\n      phrase: this.state.newPhrase,\r\n      phraseOfficial: this.state.newPhrase,\r\n      info: `${this.state.newPhrase} has been found`,\r\n      active: false\r\n    };\r\n    const messages = [...this.state.messages, newPhrase];\r\n\r\n    this.setState({\r\n      messages,\r\n      newPhrase: \"\",\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  // handleTestClick = () => {\r\n  //   console.log(this.state);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <header>\r\n          <h1>Phrase Finder</h1>\r\n        </header>\r\n        <main>\r\n          <LoadFiles\r\n            click={this.handleClick}\r\n            kbvFile={this.state.kbvFile}\r\n            change={this.handleChangeFile}\r\n          />\r\n          <Phrases\r\n            messages={this.state.messages}\r\n            click={this.handleAddPhrase}\r\n            change={this.handleChangeNewPhrase}\r\n            value={this.state.newPhrase}\r\n          />\r\n          <Infos\r\n            kbvData={this.state.kbvData}\r\n            fileLoaded={this.state.fileLoaded}\r\n          />\r\n        </main>\r\n        <footer>\r\n          <p>Powered by Grzegorz Paprzycki</p>\r\n          {/* <button onClick={this.handleTestClick}>Test state</button> */}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}